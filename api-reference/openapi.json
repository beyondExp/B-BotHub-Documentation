{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoke_llm": {
      "post": {
        "description": "Invoke Large Language Model",
        "requestBody": {
          "description": "This endpoint allows you to invoke a language model using specific parameters, such as the expert and model IDs, input data, and additional configuration options.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvokeLanguageModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response with generated content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMErrorResponse400"
                }
              }
            }
          },
          "401": {
            "description": "The provided API key was invalid or missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMErrorResponse401"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred on the server side.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMErrorResponse500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/get_expert/:id": {
      "get": {
        "description": "This endpoint retrieves detailed information about a specific expert on the B-Bot platform based on the expert's unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique identifier of the expert to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a single Expert response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SingleExpertResponse200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/get_experts": {
      "get": {
        "description": "This endpoint retrieves a list of expert agents available on the B-Bot platform. Each expert is described with various attributes such as their name, profession, description, and abilities.",
        "responses": {
          "200": {
            "description": "Get a single Expert response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpertResponse200"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "InvokeLanguageModel": {
        "type": "object",
        "properties": {
          "expert_id": {
            "type": "integer",
            "description": "The ID of the expert you want to invoke."
          },
          "model_id": {
            "type": "integer",
            "description": "The ID of the language model to be used."
          },
          "input_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": ["user", "system"],
                  "description": "The role of the message sender, typically 'user' or 'system'."
                },
                "content": {
                  "type": "string",
                  "description": "The content of the message."
                }
              },
              "required": ["role", "content"]
            },
            "description": "A list of message objects containing the role and content of the input data."
          },
          "temperature": {
            "type": "number",
            "format": "float",
            "description": "The sampling temperature, which controls the randomness of the model's outputs."
          },
          "max_tokens": {
            "type": "integer",
            "description": "The maximum number of tokens (words or word pieces) to generate in the response."
          }
        },
        "required": ["expert_id", "model_id", "input_data"]
      },
      "LLMResponse200": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "The request was successful, and the model generated a response."
          }
        },
        "required": ["code", "message"]
      },
      "LLMErrorResponse400": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Invalid parameters provided."
          },
          "details": {
            "type": "string",
            "example": "The 'input_data' field is required."
          }
        },
        "required": ["code", "message"]
      },
      "LLMErrorResponse401": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized access. API key is missing or invalid."
          }
        },
        "required": ["code", "message"]
      },
      "LLMErrorResponse500": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "An unexpected error occurred on the server."
          },
          "details": {
            "type": "string",
            "example": "Please try again later."
          }
        },
        "required": ["code", "message"]
      },
      "SingleExpertResponse200": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 37,
            "description": "Unique identifier of the expert."
          },
          "name": {
            "type": "string",
            "example": "Martina Lehmann",
            "description": "Name of the expert."
          },
          "description": {
            "type": "string",
            "example": "Martina Lehmann is a seasoned Business Development Manager with 15 years of experience in strategic planning and market analysis.",
            "description": "Detailed description of the expert's background and expertise."
          },
          "function_name": {
            "type": "string",
            "example": "Psychological Marketing Insights with Consumer Behavior Expert",
            "description": "Title or role of the expert."
          },
          "function_description": {
            "type": "string",
            "example": "Martina Lehmann provides expert guidance on incorporating psychology into marketing strategies.",
            "description": "Description of the expert's function and how they can assist clients."
          },
          "system_message": {
            "type": "string",
            "example": "Act as the Co-Founder and CMO of B-Bot, offering insights into Marketing Psychology.",
            "description": "Message to set the context for the expert's role in the system."
          },
          "createdAt": {
            "type": "string",
            "example": "2024-05-01T14:20:57.856Z",
            "description": "Timestamp when the expert was created."
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-07-08T17:56:35.652Z",
            "description": "Timestamp when the expert was last updated."
          },
          "publishedAt": {
            "type": "string",
            "example": "2024-05-01T14:20:57.835Z",
            "description": "Timestamp when the expert was published."
          },
          "locale": {
            "type": "string",
            "example": "en",
            "description": "Locale setting of the expert."
          },
          "profession": {
            "type": "string",
            "example": "Business Development Manager",
            "description": "Profession of the expert."
          },
          "apps": {
            "type": "object",
            "example": {},
            "description": "Information about apps the expert is associated with."
          },
          "expert_llm_models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 6,
                  "description": "Unique identifier of the LLM model."
                },
                "name": {
                  "type": "string",
                  "example": "Base Model Janina",
                  "description": "Name of the LLM model."
                },
                "identifier": {
                  "type": "string",
                  "example": "gpt-3.5-turbo-0125",
                  "description": "Identifier of the LLM model."
                },
                "createdAt": {
                  "type": "string",
                  "example": "2024-05-01T14:20:57.904Z",
                  "description": "Timestamp when the LLM model was created."
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2024-05-01T15:35:57.662Z",
                  "description": "Timestamp when the LLM model was last updated."
                },
                "publishedAt": {
                  "type": "string",
                  "example": "2024-05-01T14:50:16.311Z",
                  "description": "Timestamp when the LLM model was published."
                },
                "locale": {
                  "type": "string",
                  "example": "en",
                  "description": "Locale setting of the LLM model."
                }
              }
            },
            "description": "Array of LLM models associated with the expert."
          },
          "abilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 80,
                  "description": "Unique identifier of the ability."
                },
                "name": {
                  "type": "string",
                  "example": "Ability",
                  "description": "Name of the ability."
                },
                "text": {
                  "type": "string",
                  "example": "Skilled in strategic planning and execution.",
                  "description": "Detailed description of the ability."
                },
                "createdAt": {
                  "type": "string",
                  "example": "2024-06-12T19:45:02.098Z",
                  "description": "Timestamp when the ability was created."
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2024-06-28T14:12:13.933Z",
                  "description": "Timestamp when the ability was last updated."
                },
                "publishedAt": {
                  "type": "string",
                  "example": "2024-06-12T19:45:02.085Z",
                  "description": "Timestamp when the ability was published."
                },
                "locale": {
                  "type": "string",
                  "example": "en",
                  "description": "Locale setting of the ability."
                }
              }
            },
            "description": "Array of abilities describing the expert's skills."
          }
        }
      },
      "ExpertResponse200": {
        "type": "object",
        "properties": {
          "experts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 37,
                  "description": "Unique identifier of the expert."
                },
                "name": {
                  "type": "string",
                  "example": "Martina Lehmann",
                  "description": "Name of the expert."
                },
                "description": {
                  "type": "string",
                  "example": "Martina Lehmann is a seasoned Business Development Manager with 15 years of experience in strategic planning and market analysis.",
                  "description": "Detailed description of the expert's background and expertise."
                },
                "function_name": {
                  "type": "string",
                  "example": "Psychological Marketing Insights with Consumer Behavior Expert",
                  "description": "Title or role of the expert."
                },
                "function_description": {
                  "type": "string",
                  "example": "Martina Lehmann provides expert guidance on incorporating psychology into marketing strategies.",
                  "description": "Description of the expert's function and how they can assist clients."
                },
                "system_message": {
                  "type": "string",
                  "example": "Act as the Co-Founder and CMO of B-Bot, offering insights into Marketing Psychology.",
                  "description": "Message to set the context for the expert's role in the system."
                },
                "createdAt": {
                  "type": "string",
                  "example": "2024-05-01T14:20:57.856Z",
                  "description": "Timestamp when the expert was created."
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2024-07-08T17:56:35.652Z",
                  "description": "Timestamp when the expert was last updated."
                },
                "publishedAt": {
                  "type": "string",
                  "example": "2024-05-01T14:20:57.835Z",
                  "description": "Timestamp when the expert was published."
                },
                "locale": {
                  "type": "string",
                  "example": "en",
                  "description": "Locale setting of the expert."
                },
                "profession": {
                  "type": "string",
                  "example": "Business Development Manager",
                  "description": "Profession of the expert."
                },
                "apps": {
                  "type": "object",
                  "example": {},
                  "description": "Information about apps the expert is associated with."
                },
                "expert_llm_models": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 6,
                        "description": "Unique identifier of the LLM model."
                      },
                      "name": {
                        "type": "string",
                        "example": "Base Model Janina",
                        "description": "Name of the LLM model."
                      },
                      "identifier": {
                        "type": "string",
                        "example": "gpt-3.5-turbo-0125",
                        "description": "Identifier of the LLM model."
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2024-05-01T14:20:57.904Z",
                        "description": "Timestamp when the LLM model was created."
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2024-05-01T15:35:57.662Z",
                        "description": "Timestamp when the LLM model was last updated."
                      },
                      "publishedAt": {
                        "type": "string",
                        "example": "2024-05-01T14:50:16.311Z",
                        "description": "Timestamp when the LLM model was published."
                      },
                      "locale": {
                        "type": "string",
                        "example": "en",
                        "description": "Locale setting of the LLM model."
                      }
                    }
                  },
                  "description": "Array of LLM models associated with the expert."
                },
                "abilities": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 80,
                        "description": "Unique identifier of the ability."
                      },
                      "name": {
                        "type": "string",
                        "example": "Ability",
                        "description": "Name of the ability."
                      },
                      "text": {
                        "type": "string",
                        "example": "Skilled in strategic planning and execution.",
                        "description": "Detailed description of the ability."
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2024-06-12T19:45:02.098Z",
                        "description": "Timestamp when the ability was created."
                      },
                      "updatedAt": {
                        "type": "string",
                        "example": "2024-06-28T14:12:13.933Z",
                        "description": "Timestamp when the ability was last updated."
                      },
                      "publishedAt": {
                        "type": "string",
                        "example": "2024-06-12T19:45:02.085Z",
                        "description": "Timestamp when the ability was published."
                      },
                      "locale": {
                        "type": "string",
                        "example": "en",
                        "description": "Locale setting of the ability."
                      }
                    }
                  },
                  "description": "Array of abilities describing the expert's skills."
                }
              }
            },
            "description": "An array of expert objects."
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
